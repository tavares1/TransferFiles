package TransferApp;


/**
* TransferApp/TransferPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Transfer.idl
* Segunda-feira, 14 de Outubro de 2019 18h44min21s GFT
*/

public abstract class TransferPOA extends org.omg.PortableServer.Servant
 implements TransferApp.TransferOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("transfer", new java.lang.Integer (0));
    _methods.put ("enviarListaDeArquivos", new java.lang.Integer (1));
    _methods.put ("login", new java.lang.Integer (2));
    _methods.put ("logout", new java.lang.Integer (3));
    _methods.put ("requisitarListaDeArquivosComUser", new java.lang.Integer (4));
    _methods.put ("requisitarListaDeArquivos", new java.lang.Integer (5));
    _methods.put ("shutdown", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // TransferApp/Transfer/transfer
       {
         String file1 = in.read_string ();
         String $result = null;
         $result = this.transfer (file1);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // TransferApp/Transfer/enviarListaDeArquivos
       {
         String user = in.read_string ();
         String list[] = TransferApp.PathListHelper.read (in);
         boolean $result = false;
         $result = this.enviarListaDeArquivos (user, list);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // TransferApp/Transfer/login
       {
         String user = in.read_string ();
         boolean $result = false;
         $result = this.login (user);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // TransferApp/Transfer/logout
       {
         String user = in.read_string ();
         this.logout (user);
         out = $rh.createReply();
         break;
       }

       case 4:  // TransferApp/Transfer/requisitarListaDeArquivosComUser
       {
         TransferApp.UserFiles $result[] = null;
         $result = this.requisitarListaDeArquivosComUser ();
         out = $rh.createReply();
         TransferApp.UsersWithFilesHelper.write (out, $result);
         break;
       }

       case 5:  // TransferApp/Transfer/requisitarListaDeArquivos
       {
         String user = in.read_string ();
         String $result[] = null;
         $result = this.requisitarListaDeArquivos (user);
         out = $rh.createReply();
         TransferApp.PathListHelper.write (out, $result);
         break;
       }

       case 6:  // TransferApp/Transfer/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:TransferApp/Transfer:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Transfer _this() 
  {
    return TransferHelper.narrow(
    super._this_object());
  }

  public Transfer _this(org.omg.CORBA.ORB orb) 
  {
    return TransferHelper.narrow(
    super._this_object(orb));
  }


} // class TransferPOA
